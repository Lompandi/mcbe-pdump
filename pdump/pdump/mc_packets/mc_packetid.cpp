

#include "mc_packetid.hpp"
#include <format>

static std::map<uint32_t, std::string> id_map = {
        {0x0, "KeepAlive"},
        {0x1, "Login"},
        {0x2, "PlayStatus"},
        {0x3, "ServerToClientHandshake"},
        {0x4, "ClientToServerHandshake"},
        {0x5, "Disconnect"},
        {0x6, "ResourcePacksInfo"},
        {0x7, "ResourcePackStack"},
        {0x8, "ResourcePackClientResponse"},
        {0x9, "Text"},
        {0xA, "SetTime"},
        {0xB, "StartGame"},
        {0xC, "AddPlayer"},
        {0xD, "AddActor"},
        {0xE, "RemoveActor"},
        {0xF, "AddItemActor"},
        {0x10, "UNUSED"},
        {0x11, "TakeItemActor"},
        {0x12, "MoveActorAbsolute"},
        {0x13, "MovePlayer"},
        {0x14, "PassengerJump"},
        {0x15, "UpdateBlock"},
        {0x16, "AddPainting"},
        {0x17, "TickSync_Deprecated"},
        {0x18, "LevelSoundEventV1"},
        {0x19, "LevelEvent"},
        {0x1A, "BlockEvent"},
        {0x1B, "ActorEvent"},
        {0x1C, "MobEffect"},
        {0x1D, "UpdateAttributes"},
        {0x1E, "InventoryTransaction"},
        {0x1F, "MobEquipment"},
        {0x20, "MobArmorEquipment"},
        {0x21, "Interact"},
        {0x22, "BlockPickRequest"},
        {0x23, "ActorPickRequest"},
        {0x24, "PlayerAction"},
        {0x25, "ActorFall_Deprecated"},
        {0x26, "HurtArmor"},
        {0x27, "SetActorData"},
        {0x28, "SetActorMotion"},
        {0x29, "SetActorLink"},
        {0x2A, "SetHealth"},
        {0x2B, "SetSpawnPosition"},
        {0x2C, "Animate"},
        {0x2D, "Respawn"},
        {0x2E, "ContainerOpen"},
        {0x2F, "ContainerClose"},
        {0x30, "PlayerHotbar"},
        {0x31, "InventoryContent"},
        {0x32, "InventorySlot"},
        {0x33, "ContainerSetData"},
        {0x34, "CraftingData"},
        {0x35, "CraftingEvent_Deprecated"},
        {0x36, "GuiDataPickItem"},
        {0x37, "AdventureSettings_Deprecated"},
        {0x38, "BlockActorData"},
        {0x39, "PlayerInput"},
        {0x3A, "LevelChunk"},
        {0x3B, "SetCommandsEnabled"},
        {0x3C, "SetDifficulty"},
        {0x3D, "ChangeDimension"},
        {0x3E, "SetPlayerGameType"},
        {0x3F, "PlayerList"},
        {0x40, "SimpleEvent"},
        {0x41, "LegacyTelemetryEvent"},
        {0x42, "SpawnExperienceOrb"},
        {0x43, "ClientboundMapItemData"},
        {0x44, "MapInfoRequest"},
        {0x45, "RequestChunkRadius"},
        {0x46, "ChunkRadiusUpdated"},
        {0x47, "ItemFrameDropItem_Deprecated"},
        {0x48, "GameRulesChanged"},
        {0x49, "Camera"},
        {0x4A, "BossEvent"},
        {0x4B, "ShowCredits"},
        {0x4C, "AvailableCommands"},
        {0x4D, "CommandRequest"},
        {0x4E, "CommandBlockUpdate"},
        {0x4F, "CommandOutput"},
        {0x50, "UpdateTrade"},
        {0x51, "UpdateEquip"},
        {0x52, "ResourcePackDataInfo"},
        {0x53, "ResourcePackChunkData"},
        {0x54, "ResourcePackChunkRequest"},
        {0x55, "Transfer"},
        {0x56, "PlaySound"},
        {0x57, "StopSound"},
        {0x58, "SetTitle"},
        {0x59, "AddBehaviorTree"},
        {0x5A, "StructureBlockUpdate"},
        {0x5B, "ShowStoreOffer"},
        {0x5C, "PurchaseReceipt"},
        {0x5D, "PlayerSkin"},
        {0x5E, "SubClientLogin"},
        {0x5F, "AutomationClientConnect"},
        {0x60, "SetLastHurtBy"},
        {0x61, "BookEdit"},
        {0x62, "NpcRequest"},
        {0x63, "PhotoTransfer"},
        {0x64, "ModalFormRequest"},
        {0x65, "ModalFormResponse"},
        {0x66, "ServerSettingsRequest"},
        {0x67, "ServerSettingsResponse"},
        {0x68, "ShowProfile"},
        {0x69, "SetDefaultGameType"},
        {0x6A, "RemoveObjective"},
        {0x6B, "SetDisplayObjective"},
        {0x6C, "SetScore"},
        {0x6D, "LabTable"},
        {0x6E, "UpdateBlockSynced"},
        {0x6F, "MoveActorDelta"},
        {0x70, "SetScoreboardIdentity"},
        {0x71, "SetLocalPlayerAsInit"},
        {0x72, "UpdateSoftEnum"},
        {0x73, "NetworkStackLatency"},
        {0x74, "BlockPalette"},
        {0x75, "ScriptCustomEvent"},
        {0x76, "SpawnParticleEffect"},
        {0x77, "AvailableActorIdentifiers"},
        {0x78, "LevelSoundEventV2"},
        {0x79, "NetworkChunkPublisherUpdate"},
        {0x7A, "BiomeDefinitionList"},
        {0x7B, "LevelSoundEvent"},
        {0x7C, "LevelEventGeneric"},
        {0x7D, "LecternUpdate"},
        {0x7E, "VideoStreamConnect_Deprecated"},
        {0x7F, "AddEntity_Deprecated"},
        {0x80, "RemoveEntity_Deprecated"},
        {0x81, "ClientCacheStatus"},
        {0x82, "OnScreenTextureAnimation"},
        {0x83, "MapCreateLockedCopy"},
        {0x84, "StructureTemplateDataRequest"},
        {0x85, "StructureTemplateDataResponse"},
        {0x86, "UNUSED_PLS_USE_ME2"},
        {0x87, "ClientCacheBlobStatus"},
        {0x88, "ClientCacheMissResponse"},
        {0x89, "EducationSettings"},
        {0x8A, "Emote"},
        {0x8B, "MultiplayerSettings"},
        {0x8C, "SettingsCommand"},
        {0x8D, "AnvilDamage"},
        {0x8E, "CompletedUsingItem"},
        {0x8F, "NetworkSettings"},
        {0x90, "PlayerAuthInput"},
        {0x91, "CreativeContent"},
        {0x92, "PlayerEnchantOptions"},
        {0x93, "ItemStackRequest"},
        {0x94, "ItemStackResponse"},
        {0x95, "PlayerArmorDamage"},
        {0x96, "CodeBuilder"},
        {0x97, "UpdatePlayerGameType"},
        {0x98, "EmoteList"},
        {0x99, "PositionTrackingDBServerBroadcast"},
        {0x9A, "PositionTrackingDBClientRequest"},
        {0x9B, "DebugInfo"},
        {0x9C, "PacketViolationWarning"},
        {0x9D, "MotionPredictionHints"},
        {0x9E, "AnimateEntity"},
        {0x9F, "CameraShake"},
        {0xA0, "PlayerFog"},
        {0xA1, "CorrectPlayerMovePrediction"},
        {0xA2, "ItemComponent"},
        {0xA3, "FilterText_Deprecated"},
        {0xA4, "ClientboundDebugRenderer"},
        {0xA5, "SyncActorProperty"},
        {0xA6, "AddVolumeEntity"},
        {0xA7, "RemoveVolumeEntity"},
        {0xA8, "SimulationType"},
        {0xA9, "NpcDialogue"},
        {0xAA, "EduUriResource"},
        {0xAB, "CreatePhoto"},
        {0xAC, "UpdateSubChunkBlocks"},
        {0xAD, "PhotoInfoRequest_Deprecated"},
        {0xAE, "SubChunk"},
        {0xAF, "SubChunkRequest"},
        {0xB0, "PlayerStartItemCooldown"},
        {0xB1, "ScriptMessage"},
        {0xB2, "CodeBuilderSource"},
        {0xB3, "TickingAreasLoadStatus"},
        {0xB4, "DimensionData"},
        {0xB5, "AgentAction"},
        {0xB6, "ChangeMobProperty"},
        {0xB7, "LessonProgress"},
        {0xB8, "RequestAbility"},
        {0xB9, "RequestPermissions"},
        {0xBA, "ToastRequest"},
        {0xBB, "UpdateAbilities"},
        {0xBC, "UpdateAdventureSettings"},
        {0xBD, "DeathInfo"},
        {0xBE, "EditorNetwork"},
        {0xBF, "FeatureRegistry"},
        {0xC0, "ServerStats"},
        {0xC1, "RequestNetworkSettings"},
        {0xC2, "GameTestRequest"},
        {0xC3, "GameTestResults"},
        {0xC4, "UpdateClientInputLocks"},
        {0xC5, "ClientCheatAbility_Deprecated"},
        {0xC6, "CameraPresets"},
        {0xC7, "UnlockedRecipes"},
        {0x12C, "CameraInstruction"},
        {0x12D, "CompressedBiomeDefinitionList"},
        {0x12E, "TrimData"},
        {0x12F, "OpenSign"},
        {0x130, "AgentAnimation"},
        {0x131, "RefreshEntitlements"},
        {0x132, "PlayerToggleCrafterSlotRequest"},
        {0x133, "SetPlayerInventoryOptions"},
        {0x134, "SetHud"},
        {0x135, "AwardAchievementPacket"},
        {0x136, "EndId"}
};

namespace pkd {

    std::optional<uint32_t> get_unsigned_varint(const char* buffer, size_t size) {
        uint32_t varint = 0;
        size_t byte_count = 0;

        for (size_t i = 0; i < size; ++i) {
            uint8_t byte = static_cast<uint8_t>(buffer[i]);
            varint |= (byte & 0x7F) << (7 * byte_count);

            byte_count++;

            if ((byte & 0x80) == 0) {
                return varint;
            }

            if (byte_count > 4) {
                return std::nullopt;
            }
        }
        return std::nullopt;
    }

    std::string pktid_to_name(uint32_t id) {
        auto it = id_map.find(id);
        if (it != id_map.end()) {
            return std::format("{}", it->second);
        }
        else {
            return "Unknown";
        }
    }
}